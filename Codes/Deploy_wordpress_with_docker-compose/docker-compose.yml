### Reference: https://www.linode.com/docs/guides/wordpress-with-docker-compose/ ###
---
version: "3"

services:              #Defines the type of containers to run#
  ### MySQL Database image ###
  my_database:         #First service named "my_database"#
    image: mysql       #To run a MySQL database, we will need a MySQL image from Docker hub.# 
    restart: always    #In case the container stops running for any reason, set it to restart. If the server reboots, the container restarts. #
    
    ###  Below are MySQL environments: The database environment consists of the database name and password and database username and password. ###
    ###  WordPress will use these environment variables to connect to the MySQL container.###
    
    environment:
      MYSQL_ROOT_PASSWORD: database*pass*123
      MYSQL_DATABASE: code1_database
      MYSQL_USER: dikshita
      MYSQL_PASSWORD: database*pass*123
    volumes:            # We define the container volumes. This will map the MySQL container data to the volumes you created. #
      - mysql:/var/lib/mysql

  #WordPress image based on Apache
  wordpress:            #Second service named "wordpress"# 
    depends_on:         #Depends on is to make sure that a container only starts when the services it depends on are online. Since WordPress relies on the MySQL container, therefore, we specifz teh dependencies as below #
      - my_database     #The name here should be the name of the MySql container or Database service which is "my_database" in this case#
    image: wordpress:latest #Here we define the Wordpress image and it loads the latest version of Wordpress#
    restart: always
    
    ### Below we set the Container port. Since the Wordpress image on Apache where Apache runs on port no. 80, so here we have to specify the same port no. on Which Apache runs ###
    ### This port 80 is mapped to port no. 8000 of the local machine ###
    ports:
      - "8080:80"

    ### Below we declare the  WordPress environment variables. IN order to run a wordpress container, we should sedeclare and set the database environments which teh  WordPress will utilize. ###
    ### These variables include the WordPress database host, WordPress database user name, database user password, and the database name defined in the MySQL service (first service in our case) environements. ###
    environment:
      WORDPRESS_DB_PASSWORD: wordpress*pass*123
      WORDPRESS_DB_NAME: code1_database
      WORDPRESS_DB_USER: dikshita
      WORDPRESS_DB_HOST: my_database:3000
      
      
      
    volumes:
      ["./:/var/www/html"]   #It maps the current directory to the directory containing the WordPress files#
volumes:
  mysql: {}  # Declaring a top level volume which will define MySQL as declared in mysql:/var/lib/mysql (Volumes part of first service) #
...